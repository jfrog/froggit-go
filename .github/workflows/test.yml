name: Tests
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu, windows, macos ]
    steps:
      - uses: actions/checkout@v4

      - name: Start FastCI Optimization
        uses: jfrog-fastci/fastci@main
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          fastci_otel_token: ${{ secrets.FASTCI_TOKEN }}
          enabled_optimizations: 'go_test_junit_optimization'

      - name: Setup Go with cache
        uses: jfrog/.github/actions/install-go-with-cache@main

      # Run tests
      - name: Tests
        run: go test -v -race -covermode atomic -coverprofile=covprofile ./...

      # Generate code coverage
      - name: Send coverage
        run: |
          go install github.com/mattn/goveralls@latest
          goveralls -coverprofile=covprofile -service=github
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: runner.os == 'Linux'
